left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
###hatA3
beta=topic_models_ours_full[[K3]]$beta
hatA3=t(exp(beta))
colnames(hatA3)=paste0("Topic","_", 1:K3)
plot_words_per_group(hatA3,words=10) # running function at the end of this file before running this
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri")
beta=exp(topic_models_ours_full[[K3]]$beta)
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
# Transpose and create a proper data frame
max_topic_df <- as.data.frame(t(max_topic_df), stringsAsFactors = FALSE)
colnames(max_topic_df) <- c("Max_Topic", "Max_Proportion")
max_topic_df$Bacteria <- rownames(max_topic_df)  # Add the Bacteria column
count_df=as.data.frame(counts_select/M_it)
count_df$SampleID=rownames(counts_select)
df_count_total=selected_nonpreg_subject_m %>%left_join(., count_df, by="SampleID")
df_counts_UAB077= df_count_total %>% filter(Subject=="UAB077")
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri","Streptococcus.agalactiae.pyogenes")
beta=exp(topic_models_ours_full[[K3]]$beta)
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
# Transpose and create a proper data frame
max_topic_df <- as.data.frame(t(max_topic_df), stringsAsFactors = FALSE)
colnames(max_topic_df) <- c("Max_Topic", "Max_Proportion")
max_topic_df$Bacteria <- rownames(max_topic_df)  # Add the Bacteria column
count_df=as.data.frame(counts_select/M_it)
count_df$SampleID=rownames(counts_select)
df_count_total=selected_nonpreg_subject_m %>%left_join(., count_df, by="SampleID")
df_counts_UAB077= df_count_total %>% filter(Subject=="UAB077")
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
gammas=lda_models_full[[K3]]$gamma
gammas=as.data.frame(gammas)
gammas$SampleID=selected_nonpreg_subject_m$SampleID
df_A3=selected_nonpreg_subject_m %>%left_join(., gammas, by="SampleID")
df_long <- df_A3 %>%
pivot_longer(cols = starts_with("V"),
names_to = "Topic",
values_to = "Proportion")
#Calculate mean proportions for each topic and time across individuals
df_mean <- df_long %>%
group_by(cycleday, Topic,Race) %>%
summarize(mean = mean(Proportion),
median=median(Proportion))
# Plotting the individual topic proportions for one individual with menstrual days
ggplot() +
# Individual lines (subject-specific topic proportions)
geom_line(data = df_long %>% filter(Subject %in% c("UAB077")),
aes(x = cycleday, y = Proportion, color = Subject),
size = 1.5, show.legend = T) +
# # Mean line for each topic by race
geom_line(data = df_mean%>%filter(Race=="African American"),
aes(x = cycleday, y = median, color = Race),
size = 0.6,alpha = 0.8, show.legend = TRUE) +
# Separate plots for each topic using facet_wrap
facet_wrap(~ Topic, ncol = 1, scales = "free_y") +
# Set color palette
scale_color_brewer(palette = "Set2") +
# Set x-axis scale for menstrual cycle days
scale_x_continuous(breaks = seq(min(df_long$cycleday), max(df_long$cycleday), by = 2)) +
scale_y_log10(oob = scales::squish) +
# Add titles and labels
labs(
x = "Menstrual Cycle Day",
y = "Topic Proportion") +
# Set theme options for better visualization
theme(plot.title = element_text(hjust = 0.5))
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri","Streptococcus.agalactiae.pyogenes")
gammas=ntd_full[[K3]]$gamma
gammas=as.data.frame(gammas)
gammas$SampleID=selected_nonpreg_subject_m$SampleID
df_A3=selected_nonpreg_subject_m %>%left_join(., gammas, by="SampleID")
df_long <- df_A3 %>%
pivot_longer(cols = starts_with("V"),
names_to = "Topic",
values_to = "Proportion")
#Calculate mean proportions for each topic and time across individuals
df_mean <- df_long %>%
group_by(cycleday, Topic,Race) %>%
summarize(mean = mean(Proportion),
median=median(Proportion))
# Plotting the individual topic proportions for one individual with menstrual days
ggplot() +
# Individual lines (subject-specific topic proportions)
geom_line(data = df_long %>% filter(Subject %in% c("UAB077")),
aes(x = cycleday, y = Proportion, color = Subject),
size = 1.5, show.legend = T) +
# # Mean line for each topic by race
geom_line(data = df_mean%>%filter(Race=="African American"),
aes(x = cycleday, y = median, color = Race),
size = 0.6,alpha = 0.8, show.legend = TRUE) +
# Separate plots for each topic using facet_wrap
facet_wrap(~ Topic, ncol = 1, scales = "free_y") +
# Set color palette
scale_color_brewer(palette = "Set2") +
# Set x-axis scale for menstrual cycle days
scale_x_continuous(breaks = seq(min(df_long$cycleday), max(df_long$cycleday), by = 2)) +
scale_y_log10(oob = scales::squish) +
# Add titles and labels
labs(
x = "Menstrual Cycle Day",
y = "Topic Proportion") +
# Set theme options for better visualization
theme(plot.title = element_text(hjust = 0.5))
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri","Streptococcus.agalactiae.pyogenes")
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Fastidiosipila..g.","Gardnerella.leopo..swids.","Megasphaera..g.","Parvimonas..g.","Prevotella.timonensis","Sneathia.sanguinegens")
beta=exp(topic_models_ours_full[[K3]]$beta)
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
df_counts_UAB077= df_count_total
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
###hatA3
beta=topic_models_ours_full[[K3]]$beta
df_counts_UAB077= df_count_total
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
View(df_long_UAB077)
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, Race,all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri")
beta=exp(topic_models_ours_full[[K3]]$beta)
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
# Transpose and create a proper data frame
max_topic_df <- as.data.frame(t(max_topic_df), stringsAsFactors = FALSE)
colnames(max_topic_df) <- c("Max_Topic", "Max_Proportion")
max_topic_df$Bacteria <- rownames(max_topic_df)  # Add the Bacteria column
count_df=as.data.frame(counts_select/M_it)
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, Race,all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
View(df_merged)
###hatA3
beta=topic_models_ours_full[[K3]]$beta
ggplot() +
# Individual lines (same color for all individuals)
geom_line(data = df_merged, aes(x = cycleday, y = Count,color=Race, group = Subject), size = 0.2,alpha=0.3,show.legend = FALSE) +
# Mean line for each topic
geom_line(data = df_mean, aes(x = cycleday, y = me, color=Race), size = 1.5, show.legend = show) +
# Separate plots for each topic
facet_wrap(~ Topic,  ncol = ncol, scales = "free_y") +
scale_color_brewer(palette = "Set2")+
scale_x_continuous(breaks = seq(min(df_long$cycleday), max(df_long$cycleday), by = 2))+
labs(title = paste0(),
x = "menstrual cycle day",
y = "Topic Proportion") +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
# Individual lines (same color for all individuals)
geom_line(data = df_merged, aes(x = cycleday, y = Count,color=Race, group = Subject), size = 0.2,alpha=0.3,show.legend = FALSE) +
# Mean line for each topic
# geom_line(data = df_mean, aes(x = cycleday, y = me, color=Race), size = 1.5, show.legend = show) +
# Separate plots for each topic
facet_wrap(~ Topic,  ncol = ncol, scales = "free_y") +
scale_color_brewer(palette = "Set2")+
scale_x_continuous(breaks = seq(min(df_merged$cycleday), max(df_merged$cycleday), by = 2))+
labs(title = paste0(),
x = "menstrual cycle day",
y = "Topic Proportion") +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
# Individual lines (same color for all individuals)
geom_line(data = df_merged, aes(x = cycleday, y = Count,color=Bacteria, group = Race), size = 0.2,alpha=0.3,show.legend = FALSE) +
# Mean line for each topic
# geom_line(data = df_mean, aes(x = cycleday, y = me, color=Race), size = 1.5, show.legend = show) +
# Separate plots for each topic
facet_wrap(~ Topic,  ncol = ncol, scales = "free_y") +
scale_color_brewer(palette = "Set2")+
scale_x_continuous(breaks = seq(min(df_merged$cycleday), max(df_merged$cycleday), by = 2))+
labs(title = paste0(),
x = "menstrual cycle day",
y = "Topic Proportion") +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
# Individual lines (same color for all individuals)
geom_line(data = df_merged%>%filter(Race=="African American"), aes(x = cycleday, y = Count,color=Bacteria, group = Subject), size = 0.2,alpha=0.3,show.legend = FALSE) +
# Mean line for each topic
# geom_line(data = df_mean, aes(x = cycleday, y = me, color=Race), size = 1.5, show.legend = show) +
# Separate plots for each topic
facet_wrap(~ Topic,  ncol = ncol, scales = "free_y") +
scale_color_brewer(palette = "Set2")+
scale_x_continuous(breaks = seq(min(df_merged$cycleday), max(df_merged$cycleday), by = 2))+
labs(title = paste0(),
x = "menstrual cycle day",
y = "Topic Proportion") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_merged%>%filter(Race=="African American"), aes(x = cycleday, y = Count,color=Bacteria, group = Subject)) +
# Individual lines (same color for all individuals)
geom_line(size = 0.2,alpha=0.3,show.legend = FALSE) +
geom_point(size = 1)+
# Mean line for each topic
# geom_line(data = df_mean, aes(x = cycleday, y = me, color=Race), size = 1.5, show.legend = show) +
# Separate plots for each topic
facet_wrap(~ Max_Topic,  ncol = ncol, scales = "free_y") +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +
labs(title = paste0(),
x = "menstrual cycle day",
y = "Topic Proportion") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = df_merged%>%filter(Race=="African American"), aes(x = cycleday, y = Count,color=Bacteria, group = Bacteria)) +
# Individual lines (same color for all individuals)
geom_line(size = 0.2,alpha=0.3,show.legend = FALSE) +
geom_point(size = 1)+
# Mean line for each topic
# geom_line(data = df_mean, aes(x = cycleday, y = me, color=Race), size = 1.5, show.legend = show) +
# Separate plots for each topic
facet_wrap(~ Max_Topic,  ncol = ncol, scales = "free_y") +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +
labs(title = paste0(),
x = "menstrual cycle day",
y = "Topic Proportion") +
theme(plot.title = element_text(hjust = 0.5))
# Ensure that ncol is defined or set a value if it was undefined
ncol <- 2  # You can adjust this to control the number of columns in facet_wrap
# Plotting the bacterial counts across menstrual cycle days for African American subjects
ggplot(data = df_merged %>% filter(Race == "African American"),
aes(x = cycleday, y = Count, color = Bacteria, group = Subject)) +
# Individual lines for each subject
geom_line(size = 0.2, alpha = 0.3, show.legend = FALSE) +
geom_point(size = 1) +
# Facet by Max_Topic, using the number of columns defined
facet_wrap(~ Max_Topic, ncol = ncol, scales = "free_y") +
# Set color palette
scale_color_brewer(palette = "Set2") +
# Log scale for y-axis, handling zeros with scales::squish
scale_y_log10(oob = scales::squish) +
# Add labels
labs(title = "Bacterial Counts Across Menstrual Cycle for African American Subjects",
x = "Menstrual Cycle Day",
y = "Bacterial Count (log scale)") +
# Center the plot title
theme(plot.title = element_text(hjust = 0.5))
colnames(hatA3)=paste0("Topic","_", 1:K3)
plot_words_per_group(hatA3,words=10) # running function at the end of this file before running this
plot_words_per_group(hatA3,words=5) # running function at the end of this file before running this
plot_words_per_group(hatA3,words=15) # running function at the end of this file before running this
#VS LDA
LDA_model_K3=lda_models_full[[K3]]
hatA3_lda=exp(t(LDA_model_K3$beta))
colnames(hatA3_lda)=paste0("Topic","_LDA_", 1:K3)
plot_words_per_group(hatA3_lda,words=10) # returning top-5 words from hatA3
hatA3_lda=exp(t(LDA_model_K3$beta))
error_lda=matrix_lp_distance(beta_ours,hatA3_lda,"cosine")
#VS LDA
beta_ours=hatA3
LDA_model_K3=lda_models_full[[K3]]
hatA3_lda=exp(t(LDA_model_K3$beta))
error_lda=matrix_lp_distance(beta_ours,hatA3_lda,"cosine")
hatA3_lda=hatA3_lda%*%error_lda$permutation
colnames(hatA3_lda)=paste0("Topic","_LDA_", 1:K3)
plot_words_per_group(hatA3_lda,words=10) # returning top-5 words from hatA3
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri")
beta=exp(topic_models_ours_full[[K3]]$beta)
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
# Transpose and create a proper data frame
max_topic_df <- as.data.frame(t(max_topic_df), stringsAsFactors = FALSE)
colnames(max_topic_df) <- c("Max_Topic", "Max_Proportion")
max_topic_df$Bacteria <- rownames(max_topic_df)  # Add the Bacteria column
count_df=as.data.frame(counts_select/M_it)
count_df$SampleID=rownames(counts_select)
df_count_total=selected_nonpreg_subject_m %>%left_join(., count_df, by="SampleID")
df_counts_UAB077= df_count_total %>% filter(Subject=="UAB077")
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, Race,all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
View(df)
View(selected_nonpreg_subject_m)
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Lactobacillus.iners","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri")
beta=exp(topic_models_ours_full[[K3]]$beta)
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
# Transpose and create a proper data frame
max_topic_df <- as.data.frame(t(max_topic_df), stringsAsFactors = FALSE)
colnames(max_topic_df) <- c("Max_Topic", "Max_Proportion")
max_topic_df$Bacteria <- rownames(max_topic_df)  # Add the Bacteria column
count_df=as.data.frame(counts_select/M_it)
count_df$SampleID=rownames(counts_select)
df_count_total=selected_nonpreg_subject_m %>%left_join(., count_df, by="SampleID")
df_counts_UAB077= df_count_total %>% filter(Subject=="UAB028")
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, Race,all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title = "Bacterial Counts Across Menstrual Cycle for Subject UAB077",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title ="",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic)  # Facet the plot by Max_Topic
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title ="",
x = "Menstrual Cycle Day",
y = "Bacterial Count",
color = "Bacteria") +
facet_wrap(~ Max_Topic,ncol =2)  # Facet the plot by Max_Topic
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae", "Fastidiosipila..g.","Gardnerella.leopo..swids.","Megasphaera..g.","Parvimonas..g.","Prevotella.timonensis","Sneathia.sanguinegens")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title ="",
x = "Menstrual Cycle Day",
y = "Bacterial Proportion",
color = "Bacteria") +
facet_wrap(~ Max_Topic,ncol =2)  # Facet the plot by Max_Topic
debugSource("C:/Users/yichg/yating/tensor-topic-modeling/tensor-topic-modeling/real_data/vaginal_ecosystem.R", echo=TRUE)
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
# scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title ="",
x = "Menstrual Cycle Day",
y = "Bacterial Proportion",
color = "Bacteria") +
facet_wrap(~ Max_Topic,ncol =2)  # Facet the plot by Max_Topic
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title ="",
x = "Menstrual Cycle Day",
y = "Bacterial Proportion",
color = "Bacteria") +
facet_wrap(~ Max_Topic,ncol =2)  # Facet the plot by Max_Topic
bacteria=c("Gardnerella.vaginalis", "Atopobium.vaginae","Gardnerella.leopo..swids.","Lactobacillus.crispatus","Prevotella.timonensis","Prevotella..g.","Lactobacillus.gasseri")
beta_df=t(as.data.frame(beta)%>%select(all_of(bacteria)))
colnames(beta_df)=paste0("V",1:K3)
max_topic_df <- apply(beta_df, 1, function(row) {
max_value <- max(row)  # Find the max value (proportion)
topic_name <- colnames(beta_df)[which.max(row)]  # Find the column name (topic) with the max value
return(c(topic_name,max_value))  # Return both the topic name and the max value
})
# Transpose and create a proper data frame
max_topic_df <- as.data.frame(t(max_topic_df), stringsAsFactors = FALSE)
colnames(max_topic_df) <- c("Max_Topic", "Max_Proportion")
max_topic_df$Bacteria <- rownames(max_topic_df)  # Add the Bacteria column
count_df=as.data.frame(counts_select/M_it)
count_df$SampleID=rownames(counts_select)
df_count_total=selected_nonpreg_subject_m %>%left_join(., count_df, by="SampleID")
df_counts_UAB077= df_count_total %>% filter(Subject=="UAB028")
df_long_UAB077 <- df_counts_UAB077 %>%
select(SampleID, cycleday, Subject, Race,all_of(bacteria)) %>%
pivot_longer(cols = bacteria, names_to = "Bacteria", values_to = "Count")
df_merged <- df_long_UAB077 %>%
left_join(max_topic_df, by = "Bacteria")
ggplot(df_merged, aes(x = cycleday, y = Count, color = Bacteria, group = Bacteria)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_brewer(palette = "Set2") +
scale_y_log10(oob = scales::squish) +  # Handles zeros by squishing them to a
labs(title ="",
x = "Menstrual Cycle Day",
y = "Bacterial Proportion",
color = "Bacteria") +
facet_wrap(~ Max_Topic,ncol =2)  # Facet the plot by Max_Topic
# Ensure that ncol is defined or set a value if it was undefined
ncol <- 2  # You can adjust this to control the number of columns in facet_wrap
# Plotting the bacterial counts across menstrual cycle days for African American subjects
ggplot(data = df_merged %>% filter(Race == "African American"),
aes(x = cycleday, y = Count, color = Bacteria, group = Subject)) +
# Individual lines for each subject
geom_line(size = 0.2, alpha = 0.3, show.legend = FALSE) +
geom_point(size = 1) +
# Facet by Max_Topic, using the number of columns defined
facet_wrap(~ Max_Topic, ncol = ncol, scales = "free_y") +
# Set color palette
scale_color_brewer(palette = "Set2") +
# Log scale for y-axis, handling zeros with scales::squish
scale_y_log10(oob = scales::squish) +
# Add labels
labs(title = "Bacterial Counts Across Menstrual Cycle for African American Subjects",
x = "Menstrual Cycle Day",
y = "Bacterial Count (log scale)") +
# Center the plot title
theme(plot.title = element_text(hjust = 0.5))
